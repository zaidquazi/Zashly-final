import Dayjs from 'dayjs';
import type { TFunction } from 'i18next';
import type { Moment } from 'moment-timezone';
import type { DateFormatterOptions, PredefinedFormatters, SupportedTranslations, TDateTimeParserInput, TDateTimeParserOutput } from './types';
export declare const notValidDateWarning = "MessageTimestamp was called without a message, or message has invalid created_at date.";
export declare const noParsingFunctionWarning = "MessageTimestamp was called but there is no datetime parsing function available";
export declare const isNumberOrString: (output: TDateTimeParserOutput) => output is string | number;
export declare const isDayOrMoment: (output: TDateTimeParserOutput) => output is Dayjs.Dayjs | Moment;
export declare const isDate: (output: unknown) => output is Date;
export declare function getDateString({ calendar, calendarFormats, format, formatDate, messageCreatedAt, t, tDateTimeParser, timestampTranslationKey, }: DateFormatterOptions): string | number | null;
export declare const predefinedFormatters: PredefinedFormatters;
export declare const defaultTranslatorFunction: TFunction<"translation", undefined>;
export declare const defaultDateTimeParser: (input?: TDateTimeParserInput) => Dayjs.Dayjs;
export declare const isLanguageSupported: (language: string) => language is SupportedTranslations;
