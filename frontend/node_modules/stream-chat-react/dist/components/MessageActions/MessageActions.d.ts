import type { PropsWithChildren } from 'react';
import React from 'react';
import type { MessageContextValue } from '../../context/MessageContext';
import type { IconProps } from '../../types/types';
type MessageContextPropsToPick = 'getMessageActions' | 'handleDelete' | 'handleFlag' | 'handleMarkUnread' | 'handleMute' | 'handlePin' | 'message';
export type MessageActionsProps = Partial<Pick<MessageContextValue, MessageContextPropsToPick>> & {
    ActionsIcon?: React.ComponentType<IconProps>;
    customWrapperClass?: string;
    inline?: boolean;
    mine?: () => boolean;
};
export declare const MessageActions: (props: MessageActionsProps) => React.JSX.Element | null;
export type MessageActionsWrapperProps = {
    customWrapperClass?: string;
    inline?: boolean;
    toggleOpen?: () => void;
};
export declare const MessageActionsWrapper: (props: PropsWithChildren<MessageActionsWrapperProps>) => React.JSX.Element;
export {};
