import { PropsWithChildren } from 'react';
import { StreamI18n, TranslationsMap } from '../i18n';
type StreamI18nContextValue = {
    t: StreamI18n['t'];
    i18n?: StreamI18n;
};
type CreateI18nParams = {
    i18nInstance?: StreamI18n;
    language?: string;
    fallbackLanguage?: string;
    translationsOverrides?: TranslationsMap;
};
export type StreamI18nProviderProps = CreateI18nParams;
export declare const StreamI18nProvider: ({ children, ...createI18nParams }: PropsWithChildren<StreamI18nProviderProps>) => import("react/jsx-runtime").JSX.Element;
export declare const useCreateI18n: ({ i18nInstance, language, fallbackLanguage, translationsOverrides, }: CreateI18nParams) => {
    i18n: StreamI18n;
    t: import("../i18n").TranslatorFunction;
};
export declare const useI18n: () => StreamI18nContextValue;
export {};
