'use strict';

var jsxRuntime = require('react/jsx-runtime');
var chart_js = require('chart.js');
var reactChartjs2 = require('react-chartjs-2');
var react = require('react');

// NOTE: this is a side effect by definition, but this component is
// isolated in a separate chunk, and it won't affect the rest of the app.
// See CallStats.tsx for more details.
chart_js.Chart.register(chart_js.CategoryScale, chart_js.LinearScale, chart_js.LineElement, chart_js.PointElement);
const CallStatsLatencyChart = (props) => {
    const { values } = props;
    let max = 0;
    const data = {
        labels: values.map((point) => {
            const date = new Date(point.x * 1000);
            return `${date.getHours()}:${date.getMinutes()}`;
        }),
        datasets: [
            {
                data: values.map((point) => {
                    const { y } = point;
                    max = Math.max(max, y);
                    return point;
                }),
                borderColor: '#00e2a1',
                backgroundColor: '#00e2a1',
            },
        ],
    };
    const options = react.useMemo(() => getLineOptions(max), [max]);
    return (jsxRuntime.jsx("div", { className: "str-video__call-stats-line-chart-container", children: jsxRuntime.jsx(reactChartjs2.Line, { options: options, data: data, className: "str-video__call-stats__latencychart" }) }));
};
const getLineOptions = (max) => ({
    maintainAspectRatio: false,
    animation: { duration: 0 },
    elements: {
        line: { borderWidth: 1 },
        point: { radius: 2 },
    },
    scales: {
        y: {
            position: 'right',
            stacked: true,
            min: 0,
            max: Math.max(180, Math.ceil((max + 10) / 10) * 10),
            grid: { display: true, color: '#979ca0' },
            ticks: { stepSize: 30 },
        },
        x: {
            grid: { display: false },
            ticks: { display: false },
        },
    },
});

exports.default = CallStatsLatencyChart;
//# sourceMappingURL=latency-chart-CpL1M_s0.cjs.js.map
