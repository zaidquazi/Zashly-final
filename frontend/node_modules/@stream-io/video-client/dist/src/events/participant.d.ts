import type { ParticipantJoined, ParticipantLeft, ParticipantUpdated, TrackPublished, TrackUnpublished } from '../gen/video/sfu/event/events';
import { CallState } from '../store';
/**
 * An event responder which handles the `participantJoined` event.
 */
export declare const watchParticipantJoined: (state: CallState) => (e: ParticipantJoined) => void;
/**
 * An event responder which handles the `participantLeft` event.
 */
export declare const watchParticipantLeft: (state: CallState) => (e: ParticipantLeft) => void;
/**
 * An event responder which handles the `participantUpdated` event.
 */
export declare const watchParticipantUpdated: (state: CallState) => (e: ParticipantUpdated) => void;
/**
 * An event responder which handles the `trackPublished` event.
 * The SFU will send this event when a participant publishes a track.
 */
export declare const watchTrackPublished: (state: CallState) => (e: TrackPublished) => void;
/**
 * An event responder which handles the `trackUnpublished` event.
 * The SFU will send this event when a participant unpublishes a track.
 */
export declare const watchTrackUnpublished: (state: CallState) => (e: TrackUnpublished) => void;
